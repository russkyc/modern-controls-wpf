<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:russkyc="clr-namespace:org.russkyc.moderncontrols">
    <Style TargetType="{x:Type russkyc:ModernRadio}">
        <Setter Property="Padding" Value="10" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundStandard}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource BackgroundSecondaryPressed}" />
        <Setter Property="HoverForeground" Value="{DynamicResource ForegroundStandardHover}" />
        <Setter Property="HoverBackground" Value="{DynamicResource BackgroundInvertedPressed}" />
        <Setter Property="PressedForeground" Value="{DynamicResource ForegroundStandardPressed}" />
        <Setter Property="PressedBackground" Value="{DynamicResource BackgroundPrimaryPressed}" />
        <Setter Property="CheckedForeground" Value="{DynamicResource ForegroundStandard}" />
        <Setter Property="CheckedBackground" Value="{DynamicResource BackgroundPrimary}" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type russkyc:ModernRadio}">
                    <Border x:Name="PART_ButtonBase"
                            Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0"
                                    Width="15"
                                    Height="15"
                                    Margin="0,0,5,0"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Visibility="Visible">
                                <Border Width="7"
                                        Height="7"
                                        Background="#ffffff"
                                        CornerRadius="{TemplateBinding CornerRadius}" />
                            </Border>
                            <TextBlock x:Name="PART_ContentHost"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Foreground="{TemplateBinding Foreground}"
                                       IsHitTestVisible="False"
                                       Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding HoverForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Background" Value="{Binding HoverBackground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{Binding CheckedForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Background" Value="{Binding CheckedBackground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>