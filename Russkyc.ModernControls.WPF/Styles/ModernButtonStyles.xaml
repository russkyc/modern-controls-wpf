<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:org.russkyc.moderncontrols.Converters"
                    xmlns:russkyc="clr-namespace:org.russkyc.moderncontrols">
    <Style TargetType="{x:Type russkyc:ModernButton}">
        <Setter Property="Padding" Value="10" />
        <Setter Property="IconPadding" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="DefaultForeground" Value="{DynamicResource ForegroundInverted}" />
        <Setter Property="DefaultBackground" Value="{DynamicResource BackgroundPrimary}" />
        <Setter Property="HoverForeground" Value="{DynamicResource ForegroundInvertedHover}" />
        <Setter Property="HoverBackground" Value="{DynamicResource BackgroundPrimaryHover}" />
        <Setter Property="PressedForeground" Value="{DynamicResource ForegroundInvertedPressed}" />
        <Setter Property="PressedBackground" Value="{DynamicResource BackgroundPrimaryPressed}" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type russkyc:ModernButton}">
                    <Border x:Name="PART_ButtonBase"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              IsHitTestVisible="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="PART_LeftIcon"
                                              Grid.Column="0"
                                              Margin="{TemplateBinding IconPadding,
                                                                       Converter={x:Static converters:LeftIconPaddingConverter.Instance}}"
                                              Content="{TemplateBinding LeftIcon}"
                                              IsHitTestVisible="False" />
                            <ContentPresenter x:Name="PART_ContentHost"
                                              Grid.Column="1"
                                              IsHitTestVisible="False"
                                              TextBlock.Foreground="{TemplateBinding Foreground}" />
                            <ContentPresenter x:Name="PART_RightIcon"
                                              Grid.Column="2"
                                              Margin="{TemplateBinding IconPadding,
                                                                       Converter={x:Static converters:RightIconPaddingConverter.Instance}}"
                                              Content="{TemplateBinding RightIcon}"
                                              IsHitTestVisible="False" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{Binding DefaultForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Background" Value="{Binding DefaultBackground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding HoverForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Background" Value="{Binding HoverBackground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>